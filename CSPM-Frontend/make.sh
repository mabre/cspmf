#!/bin/bash

build_dir="../build"

source ../make.config.sh

step "Deriving DataTypeable"
mkdir __DataTypeable 2> /dev/null
for f in `ls src/Language/CSPM/*.fr | grep -v Lexer.fr`; do
    target=__DataTypeable/`basename $f`
    if [ $f -nt $target ]; then
        cp $f $target
        echo  -e "\n-- generated by DataDeriver" >> $target
        $frege frege.dataDeriver.Main $f >> $target
        touch -r $f $target
    fi
done

function alexToFrege() {
    outfile="${1%.*}.fr"

    grep -v "^#" $1                             | # remove cpp includes starting with #
        sed "s/\t/        /"                    | # alex generates tabs!?
        grep -vE "^(\(|scanner|\))$"            | # remove export lines
        sed "s/^import qualified /import /"     | # remove qualified keyword (not needed)
        grep -v "(unsafeAt)"                    | # remove unneeded imports
        grep -v "import Array"                  |
        sed "s/^where$/where\nimport frege.Prelude hiding (Byte)/" | # AlexWrapper.Byte shadows Lang.Byte
        sed "s/!AlexInput/AlexInput/"           | # remove strictness flags
        sed "s/!Int/Int/"                       |
        sed "s/ ! / !! /"                       | # replace Array.! with Array.!!
        sed "s/| AlexError/| !AlexError/"       | # add strictness where supported by frege
        sed "s/| AlexSkip/| !AlexSkip/"         | # (mixed like AlexToken !AlexInput !Int is not supported)
        sed "s/tokenClass tok/tok.tokenClass/"  | # change record access syntax
        sed -E "s/^([a-z])/private \1/"         | # make everything private
        sed -E "s/private (module|where|import|scanner|data|instance|type)/\1/" |
        sed "s/case new_s of/if new_s == -1/"   | # workaround for frege bug #26 (Pattern support)
        sed "s/(-1) ->/then/"                   |
        sed "s/_ -> alex_/else alex_/" > $outfile

    # split long arrays to prevent "code too large" message from JVM
    for array in "alex_table" "alex_check"; do
        line=`grep "$array = " $outfile`
        name=`echo $line | cut -d " " -f2`
        ints=`echo $line | sed -E "s/.*\[(.*)\].*/\1/"`
        splitted=`$frege ArraySplitter $name $ints | sed "s/\"//g"`
        newlines=`echo $line | cut -d " " -f1-5`" $ $splitted"
        esc_line=`echo $line | sed -e 's/[][]/\\\\&/g'`
        esc_newlines=`echo $newlines | sed -e 's/[][]/\\\\&/g'`
        sed -i "s/$esc_line/$esc_newlines/" $outfile
    done
}

step "Running Alex"
$alex src/Language/CSPM/Lexer.x
success alex $?
alexToFrege src/Language/CSPM/Lexer.hs
success alexToFrege $?
touch -r src/Language/CSPM/Lexer.x src/Language/CSPM/Lexer.fr

step "Compiling CSPM-Frontend"
# if there is no old build for Token.fr, compile forward declaration for LexError
if [ ! -e $build_dir/frege/language/CSPM/Token.class ]; then
    $fregec -d $build_dir -make -sp __DataTypeable Token__LexError.fr
    success fregec $?
    touch __DataTypeable/Token.fr # so this one will be recompiles
fi

# needs (some) defintion of LexError deriving Show; needed by Token.fr
$javac -d $build_dir -cp $build_dir:$fregejar src/Language/CSPM/LexErrorException.java
success javac $?

$fregec -d $build_dir -make -sp __DataTypeable TokenClasses.fr SrcLoc.fr AlexWrapper.fr Token.fr
success fregec $?

# should be a separate process because of high memory usage of the compiler for this big file
echo Compiling Lexer.fr can take a while ...
$fregec -d $build_dir -make src/Language/CSPM/Lexer.fr
success fregec $?

$fregec -d $build_dir -make -sp __DataTypeable AST.fr UnicodeSymbols.fr LexHelper.fr src/Text/ParserCombinators/Parsec/ExprM.hs BuiltIn.fr PrettyPrinter.fr
success fregec $?

if [ ! -e $build_dir/frege/language/CSPM/ParseError.class ]; then
    $fregec -d $build_dir -make -sp __DataTypeable Parser__ParseError.fr Rename__RenameError.fr
    success fregec $?
    compiledForwardDecs=true
    touch __DataTypeable/Parser.fr __DataTypeable/Rename.fr
fi

$javac -d $build_dir -cp $build_dir:$fregejar src/Language/CSPM/ParseErrorException.java src/Language/CSPM/RenameErrorException.java
success javac $?

$fregec -d $build_dir -make -sp __DataTypeable Parser.fr
success fregec $?

# FATAL: Cant find context for Typeable.Typeable when run with -O --TODO bugreport
$java -Xss16m -Xmx2g -jar $fregejar -hints -d $build_dir -sp __DataTypeable Rename.fr
success fregec $?

$fregec -d $build_dir -make -sp __DataTypeable Utils.fr AstUtils.fr Frontend.fr
success fregec $?
